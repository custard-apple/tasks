use Phalcon\Http\Response,
    Phalcon\Http\Request,
    Phalcon\Mvc\Micro,
    Phalcon\Mvc\Model\Query,
    Phalcon\Db\Column,
    Phalcon\Mvc\Url;

$app = new Micro();

// Use Loader() to autoload our model
$loader = new \Phalcon\Loader();

$loader->registerDirs(array(
    __DIR__ . '/models/'
))->register();

$di = new \Phalcon\DI\FactoryDefault();

//Set up the database service
$di->set('db', function(){
    return new \Phalcon\Db\Adapter\Pdo\Mysql(array(
        "host" => "localhost",
        "username" => "genba_usr",
        "password" => "jw7MHkShEa",
        "dbname" => "genba_db"
    ));
});
$di->set('config', function() {
    return new \Phalcon\Config\Adapter\Ini("./config/config.ini");
});
//Create and bind the DI to the application
$app = new \Phalcon\Mvc\Micro($di);

$app->get('/user/sendMailToManager', function() use ($app){
      $response = new Response();
      try{
            $user_id = $app->request->get('user_id');
            $store_id = $app->request->get('store_id');
            $address_id = $app->request->get('address_id');
            $user = Users::findFirstById($user_id);
            if ($user) {
                  $cart= Cart::find([
                          '(user_id= :user_id: )',
                          'bind' => array('user_id' => $user_id)
                  ]);
                  $address = UserAddress::findFirstById($address_id);
                  $order_template = file_get_contents(template_path . 'user_order_receipt.volt');
                  $subtotal = 0;
                  foreach ($cart as $key => $item) {
                         $product = Products::findFirstById($item->product_id);
                         $order_items .= '<tr class=""><td class="" style="text-align:left;vertical-align:middle;border:1px solid #eee;font-family:\'Helvetica Neue\',Helvetica,Roboto,Arial,sans-serif;word-wrap:break-word;color:#737373;padding:12px">'.$product->product_title.'<br><small></small></td><td class="" style="text-align:left;vertical-align:middle;border:1px solid #eee;font-family:\'Helvetica Neue\',Helvetica,Roboto,Arial,sans-serif;color:#737373;padding:12px">'.$item->quantity.'</td><td class="" style="text-align:left;vertical-align:middle;border:1px solid #eee;font-family:\'Helvetica Neue\',Helvetica,Roboto,Arial,sans-serif;color:#737373;padding:12px"><span class=""><span class="">Q</span>'.($product->_sale_price * $item->quantity).'</span></td></tr>';
                         $subtotal += floatval($product->_sale_price * $item->quantity);
                  }

                  $order_template = str_replace('order_items', $order_items, $order_template);
                  $order_template = str_replace('order_subtotal', $subtotal, $order_template);
                  $order_template = str_replace('order_total', $subtotal, $order_template);
                  $customer_info = '<p><strong>Email:</strong> <span class="" style="color:#505050;font-family:&quot;Helvetica Neue&quot;,Helvetica,Roboto,Arial,sans-serif"><a href="mailto:nisha.gulhane@webgile.com" target="_blank">'.$user->email.'</a></span></p><p><strong>Tel:</strong> <span class="" style="color:#505050;font-family:&quot;Helvetica Neue&quot;,Helvetica,Roboto,Arial,sans-serif">'.$user->phone.'</span></p><div><h3 style="color:#557da1;display:block;font-family:&quot;Helvetica Neue&quot;,Helvetica,Roboto,Arial,sans-serif;font-size:16px;font-weight:bold;line-height:130%;margin:16px 0 8px;text-align:left">Billing address</h3><p class="" style="color:#505050;font-family:&quot;Helvetica Neue&quot;,Helvetica,Roboto,Arial,sans-serif;margin:0 0 16px">'.$user->first_name.' '.$user->last_name.'<br>'.$address->address.'<br>'.$address->city.'<br>'.$address->country.'</div>';
                  $order_template = str_replace('customer_info', $customer_info, $order_template);
                  $store = Stores::findFirstById($store_id);
                  $manager_ids= explode(',',$store->store_managers_id);
                  //print_r($manager_ids);exit;
                  //operator@genba.com 478
                  //storeman@dumb.com 476
                  //sneha@gmail.com 594
                  foreach ($manager_ids as $key => $id) {
                        $manager = Users::findFirstById($id);
                        $template=str_replace('email_placeholder', $manager->email, $order_template);
                        $subject = "Order not placed";
                        $mail_to_manager = sendmail($manager->email,$subject,$template);
                  }
                  return $response->setJsonContent(array('status' => true, 'message' => "Thanks, we'll call you in 1 minute"));
            }
            else{
                  return $response->setJsonContent(array('status' => false, 'message' => 'User not found'));
            }

      }catch(Exception $e){
            return $response->setJsonContent(array('status' => 'error', 'message' => $e->getMessage()));
      }

});
